#!/bin/bash

# Filename:         see
# Version:          1.0
# Description:
#   Find files which matched given pattern within local directory or given
#   source dir. Then less those files.
# Platforms:        GNU/Linux, Mac OS X
# Depends:          bash, less, optionally install less.vim
# Source:           https://github.com/vkuznet/Tools
# Author:           Valentin Kuznetsov <vkuznet AT gmail DOT com>
# Created on:       2013-03-05

# check number of input arguments
E_BADARGS=65
# all arguments from command line
all=$*
# make a decision
if [ $# -eq 0 ]; then
    echo "Usage: `basename $0` pattern <source_dir>"
    exit $E_BADARGS
elif [ $# -eq 1 ]; then
    input=$1
    sdir="."
    if  [ "$1" == "-h" ] || [ "$1" == "-help" ] || [ "$1" == "--help" ]; then
        echo "Usage: `basename $0` pattern <source_dir>"
        exit
    fi
else
    last=`echo "$all" | awk '{z=split($0,a," "); print a[z]}'`
    if [ -d $last ]; then
        sdir=$last
        input=`echo "$all" | awk '{ORS=" "; z=split($0,a," "); for (i=1; i<=z-1; i++) print a[i]}'`
    else
        input=$all
        sdir="."
    fi
fi
#echo "input=$input"
#echo "sdir=$sdir"

# look-up files in current/given directory
check_pfn=`ls $input 2>&1 | tr '\n' ' ' | grep -v "No such"`
check_ext=`echo "$input" | awk '{z=split($1,a,"."); print z}'`
match_pat=`echo "$input" | awk '{z=split($1,a,"*"); print z}'`
if  [ -n "$check_pfn" ]; then
    files=$check_pfn
elif  [ "$check_ext" -eq "2" ] || [ "$match_pat" -ne "1" ]; then
    # file has extension or pattern
    files=`find $sdir -name "$input" -type f | egrep -v ".o$|.pyc$|.so$|.a$|~$"`
else
    files=`find $sdir -name "$input.*" -type f | egrep -v ".o$|.pyc$|.so$|.a$|~$"`
fi

# look-up function which invoke less command over file choice
see_file()
{
    if  [ "$1" == "y" ] || [ "$1" == "Y" ] || [ "$1" == "a" ] || [ "$1" == "all" ]; then
        less $files
        exit
    fi
    if  [ "$1" == "n" ] || [ "$1" == "N" ] || [ "$1" == "q" ] || [ "$1" == "Q" ]; then
        exit
    fi

    filelist=""
    # match 1,2,3 sequence
    if [[ $1 =~ [0-9]+,[0-9] ]]; then
        range=`echo $1 | sed "s/,/ /g"`
        min=`echo $range | awk '{split($0,a," ");print a[1]}'`
        max=`echo $range | awk '{z=split($0,a," ");print a[z]}'`
        i=1
        for fname in $files; do
            if [[ $i -ge $min && $i -le $max ]]; then
                filelist+=" $fname"
            fi
            i=$(($i+1))
        done
    # match 1-3 range
    elif [[ $1 =~ [0-9]+-[0-9] ]]; then
        range=`echo $1 | awk 'BEGIN{ORS=" "} {split($1,a,"-");for(i=a[1];i<=a[2];i++) print i}'`
        min=`echo $range | awk '{split($0,a," ");print a[1]}'`
        max=`echo $range | awk '{z=split($0,a," ");print a[z]}'`
        echo "min=$min, max=$max"
        i=1
        for fname in $files; do
            if [[ $i -ge $min && $i -le $max ]]; then
                filelist+=" $fname"
            fi
            i=$(($i+1))
        done
    # run for given number
    else
        i=1
        for fname in $files; do
            if [ "$i" == "$1" ]; then
                filelist+=" $fname"
            fi
            i=$(($i+1))
        done
    fi
    less $filelist
    exit
}

# print to stdout enumerated list of files to see
if  [ -n "$files" ]; then
    echo "Will see:"
    for f in $files; do echo $f; done | \
        awk 'BEGIN{c=1} {print("echo " c ". " $0 "\n"); ++c}' | \
        /bin/sh
    echo
    # ask user what (s)he wants to see and perform this action
    read -p "Do you wish to see these files? (file-id|a(ll)|q): " answer
    see_file $answer
else
    echo "No files found"
fi

